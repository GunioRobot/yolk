# All keys used in this file _must_ be defined in the Configuration.Types
# type in core/configuration.ads.
#
# Setting an empty key will overwrite the corresponding default value with
# a Null_Unbounded_String. 
# Accessing a key with no value returns an empty string if the target is
# String or Unbounded_String. If the target is Boolean, Float or Integer
# then the Empty_Key exception is raised.
# If a valid key is commented (or missing entirely), it is ignored, and the 
# default value is used.

Admin_Password 0ac9c9d0c0b1ee058b65ae70c9aeb3a7
# String
# Default: 0ac9c9d0c0b1ee058b65ae70c9aeb3a7 (changemenow)
# Used by AWS: Yes
# This value is generated by the AWS program aws_password:
#
#     $ aws_password admin changemenow
#
# Where <password> is the replaced by the password you want to use to gain
# access to the Status_Page.
#
# You should _always_ change the default password to something more secure.

Admin_URI /status
# String
# Default: /status
# Used by AWS: Yes
# This is the URI to call the administrative page.

Certificate certificates/aws.pem
# String
# Default: cert.pem
# Used by AWS: Yes
# Set the certificate file to be used with the secure servers. 
# A single certificate or a certificate chain is supported. The certificates
# must be in PEM format and the chain must be sorted starting with the 
# subject's certificate, followed by intermediate CA certificates if 
# applicable and ending at the highest level (root) CA certificate. If the 
# file contains only a singlecertificate, it can be followed by a private key.
# In this case the Key parameter (see below) must empty.

Log_File_Directory logs/
# String. 
# Default: logs/
# Used by AWS: Yes
# Path to where the rotating log files are written. Must be read/writable
# by the server.
# This parameter does _not_ affect the Log_File_Directory parameter in aws.ini.

Error_Log_Filename_Prefix yolk_error
# String
# Default: yolk_error
# Used by AWS: Yes
# What to prefix to the errorlog filename. 
# If commented (or not specified), then <program name>_error is used.
#
# NOTE:
#
#   Must _not_ be set to the same value as Log_Filename_Prefix
#
# The logfile cleanup routine search for error logfiles named:
#
#       Error_Log_Filename_Prefix*
#
# So if Error_Log_Filename_Prefix is set to yolk_error, then the cleanup routine
# will search for files named:
#
#       yolk_error*
#
# This in turn means that you should take care _not_ to set this prefix to
# to something that would collide with Log_Filename_Prefix. Also if you set
# the Log_File_Directory to a directory where there's a lot of other log
# files, then make certain that there are no name collisions.
#
# In other words: Make absolute sure that Error_Log_Filename_Prefix is unique to 
# this application.

Error_Log_Split_Mode Daily
# Enumeration (None, Each_Run, Daily, Monthly)
# Default: Daily
# Used by AWS: Yes
# Indicates how to split the error logs. Each_Run means that a new log file
# is used each time the process is started. Daily and Monthly will use a new
# log file each day or month. None means that the log file is never split.

Log_Filename_Prefix yolk_access
# String
# Default: yolk_access
# Used by AWS: Yes
# What to prefix to the log filename.
# If commented (or not specified) then <program name> is used.
#
# NOTE:
#
#   Must _not_ be set to the same value as Error_Log_Filename_Prefix
#
# The logfile cleanup routine search for logfiles named:
#
#       Log_Filename_Prefix*
#
# So if Log_Filename_Prefix is set to yolk_access, then the cleanup routine
# will search for files named:
#
#       yolk_access*
#
# This in turn means that you should take care _not_ to set this prefix to
# to something that would collide with Error_Log_Filename_Prefix. Also if you
# set the Log_File_Directory to a directory where there's a lot of other log
# files, then make certain that there are no name collisions.
#
# In other words: Make absolute sure that Log_Filename_Prefix is unique to this
# application.

Log_Size_Limit 10_000_000
# Integer
# Default: 10_000_000
# Used by AWS: Yes
# Split the logfile if size is bigger than Log_Size_Limit. Setting this to 0
# bytes indicates that the logfile should not be splitted based on its size.
# When the logfile is split due to size, the time it happens is appended to
# the filename, before the .log part.
#
# Yolk applications clean up logfiles automatically. It keeps 30 access and 30
# error logfiles. This means that if you set the Log_Size_Limit to 0 and 
# Log_Split_Mode to Daily, then you'll end up with 30 access and 30 error logfile
# files, one for each day.
# If you on the other hand set Log_Size_Limit to 100_000, then logfiles are split
# whenever this limit is reached, no matter what Log_Split_Mode you have set, and
# the cleanup routine will then delete the oldest of these ~100KB size logfiles.
#
# Make sure that Log_Size_Limit is set according to the amount of space you wish
# to use for logfiles. If it's set at 1_000_000 then you get 30 x 1MB access logfiles
# and 30 x 1MB error logfiles - at most.

Log_Split_Mode Daily
# Enumeration (None, Each_Run, Daily, Monthly)
# Default: Daily
# Used by AWS: Yes
# Indicates how to split the logs. Each_Run means that a new log file is used
# each time the process is started. Daily and Monthly will use a new log file
# each day or month. None means that the log file is never split.

Max_Connection 5
# Positive
# Default: 5
# Used by AWS: Yes
# The maximum number of simultaneous connections to the server.

MIME_Types configuration/aws.mime
# String
# Default: configuration/aws.mime
# Used by AWS: yes
# The MIME type file. MIME types defined in this file is added to AWS when the
# server is started.

Reuse_Address True
# Boolean
# Default: False
# Used by AWS: Yes
# Set the socket reuse address policy. If set to True the server will be able
# to bind to a socket that has just been released without the need of 
# waiting. 
#
# NOTE:
#   Enabling this feature is _not_ secure and should probably only be used 
#   for debugging purposes.

Security False
# Boolean
# Default: False
# Used by AWS: Yes
# Whether or not to accept HTTPS connections. If set to True, the server will
# accept HTTPS connections. If false, only regular HTTP connections are
# accepted.
# If set to True, AWS must've been compiled with SSL enabled, and the 
# Certificate option must point to a valid certificate. A test certificate
# can be made like this:
#
#   $ openssl genrsa -rand <filename> -out ca-key.pem
#   $ $ openssl req -new -x509 -days 730 -key ca-key.pem -out ca-cert.pem
#   $ cat ca-key.pem ca-cert.pem > aws.pem
#
# The file aws.pem is now usable as a test certificate.

Security_Mode SSLv23
# String
# Default: SSLv23
# Used by AWS: Yes
# The security mode to use for the secure connections.

Server_Name Yolk
# String
# Default: Yolk
# Used by AWS: Yes
# The name of the server. For the sake of simplicity, this should probably
# match the name of the application, ie. the name of the main Ada file.
# The Server_Name is prefixed to the server log files, if no specific prefix
# has been set.

Server_Port 4242
# Positive
# Default: 4242
# Used by AWS: Yes
# Port the server is listening on. Remember that only root can listen on
# ports < 1024, so this value should be higher than 1024, or else you'll 
# have to run the server as root, which is _not_ recommended.

Session False
# Boolean
# Default: False
# Used by AWS: Yes
# Whether or not the server is using sessions.

Session_Lifetime 1200
# Positive
# Default: 1200
# Used by AWS: Yes
# Number of seconds to keep session information. After this period a session
# is obsoleted and will be removed at next cleanup.

Session_Name Yolk
# String
# Default: Yolk
# Used by AWS: Yes
# The name given to the session cookie.

Status_Page status/aws_status.thtml
# String
# Default: aws_status.thtml
# Used by AWS: Yes
# Template used for the status page. See Admin_URI and Admin_Password.

##################
#  Rotating Log  #
##################
# The Rotating Log settings control when and how to rotate the logs defined
# in the GNATCOLL_Traces_Ini_File and in the Trace_Handles type found in the
# file core/rotating_log.ads.
#
# Three rotating log tracks are defined per default:
#
#   Error
#   Info
#   GNATCOLL_SQL
#
# These log tracks have nothing to do with the general logging from the
# webserver component. Instead these are log tracks you can write to using 
# the Rotating_Log.Track procedure.
# The GNATCOLL.SQL track is somewhat special, as the output from this is
# generated by the GNATCOLL.SQL package. The amount of SQL related log data
# is controlled in the GNATCOLL_Traces_Ini_File. See this file for examples
# on usage.
#
# Note that _a lot_ of SQL log data is generated on even moderately busy 
# websites. The GNATCOLL.SQL track should probably only be activated for
# debugging purposes.
#
# Adding a new log track is as easy as adding a new component to the 
# Trace_Handles type found in core/rotating_log.ads:
#
#   type Trace_Handles is (Error, Info, GNATCOLL_SQL, My_New_Log_Track);
#
# You can then start writing to this track using the Track procedure:
#
#   Track (Handle => My_New_Log_Track, Log_String => "FooBar");
#
# NOTE:
#     Everytime the server is started, all rotating log files named 
#     [Trace_Handles]-1.log are truncated. The log data in these files are 
#     _not_ preserved between restarts.

GNATCOLL_Traces_Ini_File configuration/GNATCOLL.SQL.Logs.ini
# String.
# Default: configuration/GNATCOLL.SQL.Tracks.ini
# Used by AWS: No
# The path to the GNATCOLL.SQL traces ini file. See this file for information
# on how to disable the various SQL related log information.

Immediate_Flush False
# Boolean. 
# Default: False.
# Used by AWS: No
# If True, then we flush the IO buffer on every call to Track. If False,
# the IO buffer is flushed according to the Ada.Text_IO implementation.
# Setting it to true is incurs a performance penalty, but is necessary
# if you want log output to be written immediately.

Max_Logged_Characters 1_000_000
# Positive
# Default: 1_000_000
# Used by AWS: No
# This number define when to cycle the log file. If the amount of characters 
# logged is larger than this value, then the log file is cycled to the next 
# slot.

Max_Slot_Count 3
# Positive.
# Default: 3
# Used by AWS: No
# The amount of slots to cycle. Amount of log files generated will equal
# this value.

##########################
#  Static Content Paths  #
##########################

# The static content is content that does not change, such as images and flat
# XML/HTML files.
#
# NOTE:
#     Do _not_ add the final forward slash.

System_Templates_Path templates/system
# String.
# Default: templates/system
# Used by AWS: No
# Path to the system template files, such as 404.tmpl and similar.

CSS_Path    static_content/css
# String.
# Default: static_content/css
# Used by AWS: No
# Path to the directory where the CSS files are located.

GIF_Path    static_content/gif
# String.
# Default: static_content/gif
# Used by AWS: No
# Path to the directory where the GIF files are located.

HTML_Path   static_content/html
# String.
# Default: static_content/html
# Used by AWS: No
# Path to the directory where the HTML files are located.

ICO_Path    static_content/ico
# String.
# Default: static_content/ico
# Used by AWS: No
# Path to the directory where the ICO files are located.

JPG_Path    static_content/jpg
# String.
# Default: static_content/jpg
# Used by AWS: No
# Path to the directory where the JPG files are located.

JS_Path     static_content/js
# String.
# Default: static_content/js
# Used by AWS: No
# Path to the directory where the JS files are located.

PNG_Path    static_content/png
# String.
# Default: static_content/png
# Used by AWS: No
# Path to the directory where the PNG files are located.

XML_Path    static_content/xml
# String.
# Default: static_content/xml
# Used by AWS: No
# Path to the directory where the XML files are located.

XSL_Path    static_content/xsl
# String.
# Default: static_content/xsl
# Used by AWS: No
# Path to the directory where the XSL files are located.

##########################
#  Path To Session File  #
##########################

Session_Data_File session/session.data
# String.
# Default: session/session.data
# Used by AWS: No
# Path to the file where Session data is saved when the server is closed down.
# This file is read when the server is started, and active Sessions are then
# loaded from here.

#######################
#  Resource handlers  #
#######################

# These Key/Value pairs are literal names and regular expressions used to
# define which dispatcher is used for a given resource.
#
# NOTE:
#   Remember that the content is served on a "first hit" basis, meaning that
#   the first handler to return true wins.
#
# All dispatchers are set in the Handlers.Initialize procedure.

Handler_CSS .*\.css
# String.
# Default: .*\.css
# Used by AWS: No
# The regular expression used to decide if a requested resource is a CSS file.

Handler_GIF .*\.gif
# String.
# Default: .*\.gif
# Used by AWS: No
# The regular expression used to decide if a requested resource is a GIF file.

Handler_HTML .*\.html
# String.
# Default: .*\.html
# Used by AWS: No
# The regular expression used to decide if a requested resource is a HTML file.

Handler_ICO .*\.ico
# String.
# Default: .*\.ico
# Used by AWS: No
# The regular expression used to decide if a requested resource is a ICO file.

Handler_JPG .*\.jpg
# String.
# Default: .*\.jpg
# Used by AWS: No
# The regular expression used to decide if a requested resource is a JPG file.

Handler_JS .*\.js
# String.
# Default: .*\.js
# Used by AWS: No
# The regular expression used to decide if a requested resource is a JS file.

Handler_PNG .*\.png
# String.
# Default: .*\.png
# Used by AWS: No
# The regular expression used to decide if a requested resource is a PNG file.

Handler_XML .*\.xml
# String.
# Default: .*\.xml
# Used by AWS: No
# The regular expression used to decide if a requested resource is a XML file.

Handler_XSL .*\.xsl
# String.
# Default: .*\.xsl
# Used by AWS: No
# The regular expression used to decide if a requested resource is a XSL file.

Handler_Unknown [^status].*
# String.
# Default: [^status].*
# Used by AWS: No
# The regular expression used to decide if a requested resource is unknown.
# This handler is only called of none of the other handlers match the resource.

