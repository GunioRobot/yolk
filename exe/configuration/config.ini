# All keys used in this file _must_ be defined in the Configuration.Keys
# type in core/configuration.ads.
#
# Accessing a key with no value returns an empty string if the target is
# String or Unbounded_String. 
# If the target is Boolean, Float, Integer or Duration then the Empty_Key
# exception is raised.
# If a valid key is commented (or missing entirely), it is ignored, and the 
# default value is used. 
# Default values are defined in the Configuration.Defaults array.
#
# NOTE:
#   If a key is left empty, it is given the value Null_Unbounded_String,
#   which may or may not be what you want.
#
# If you just want to use the default value, simply comment the key.
#
# Keys marked with:
#
#   Used by AWS: Yes
#
# are used by the AWS webserver component.

##################################
#         Status Webpage         #
##################################

Admin_Password 0ac9c9d0c0b1ee058b65ae70c9aeb3a7
# String
# Default: 0ac9c9d0c0b1ee058b65ae70c9aeb3a7 (changemenow)
# Used by AWS: Yes
#
# This value is generated by the AWS program aws_password:
#
#     $ aws_password admin changemenow
#
# Where <password> is replaced by the password you want to use to gain access
# to the Status_Page.
#
# You should _always_ change Admin_Password to something more secure.

Admin_URI /status
# String
# Default: /status
# Used by AWS: Yes
#
# This is the URI to call the administrative page.

Status_Page status/aws_status.thtml
# String
# Default: status/aws_status.thtml
# Used by AWS: Yes
#
# Template used for the status page.

##################################
# Logging - Rotating And Regular #
##################################

# There are two kinds of log files in a Yolk application:
#
#   AWS access and error log files
#   Rotating log files.
#
# The AWS log files are similir to any other standard webserver log file. Here
# we log access to various resources and we log errors such as 404's and
# similar.
#
# The rotating log files are on the other hand log data from the application
# itself. This could be notification about when an action is taken, when a query
# is made or whatever you feel like. You write to these log files using the
# Rotating_Log.Track procedure.
#
# The rotating log parameters control when and how to rotate the logs defined
# in the GNATCOLL_Traces_Ini_File and in the Trace_Handles type found in the
# file core/rotating_log.ads.
#
# Three rotating log tracks are defined per default:
#
#   Error
#   Info
#   GNATCOLL_SQL
#
# The GNATCOLL.SQL track is somewhat special, as the output from this is
# generated by the GNATCOLL.SQL package. The amount of SQL related log data
# is controlled in the GNATCOLL_Traces_Ini_File. See this file for examples
# on usage.
#
# NOTE:
#   Everytime the server is started, all rotating log files are truncated. 
#   The log data in these files are _not_ preserved between restarts.

Amount_Of_Log_Files_To_Keep 30
# Integer
# Default: 30
# Used by AWS: No
#
# The amount of access and error log files that are kept when the Log_File_Monitor
# task (found in yolk.adb) poll the Log_File_Directory.
#
# This parameter does not control the rotating log files. Look at Max_Slot_Count
# to change these.

Error_Log_Filename_Prefix yolk_error
# String
# Default: yolk_error
# Used by AWS: Yes
#
# What to prefix to the errorlog filename. 
# If commented then <program name>_error is used.
#
# NOTE:
#
#   Must _not_ be set to the same value as Log_Filename_Prefix
#
# The log file cleanup routine search for error log files named:
#
#       Error_Log_Filename_Prefix*
#
# So if Error_Log_Filename_Prefix is set to yolk_error, then the cleanup routine
# will search in the Log_File_Directory for files named:
#
#       yolk_error*
#
# This in turn means that you should take care _not_ to set this prefix to
# to something that would collide with Log_Filename_Prefix, or any other log files
# for that matter, especially if you set the Log_File_Directory to a directory 
# where there's a lot of other log files.
#
# In other words: Make absolute sure that Error_Log_Filename_Prefix is unique to 
# this application.

Error_Log_Split_Mode Daily
# Enumeration (None, Each_Run, Daily, Monthly)
# Default: Daily
# Used by AWS: Yes
#
# Specifies how to split the error logs. Each_Run means that a new log file
# is created each time the application is started and then never split. 
# Daily and Monthly will split a new log file each day or month. 
# None means that the log file is never split.
#
# All of these are overruled if the Log_Size_Limit is reached. The the log file
# is split and a date and time is appended to the filename.

GNATCOLL_Traces_Ini_File configuration/GNATCOLL.SQL.Logs.ini
# String.
# Default: configuration/GNATCOLL.SQL.Tracks.ini
# Used by AWS: No
#
# The path to the GNATCOLL.SQL traces ini file. See this file for information
# on how to disable the various SQL related log information.

Immediate_Flush False
# Boolean. 
# Default: False.
# Used by AWS: No
#
# If set to True, data will be written to log files immediately, bypassing buffers.
# This parameter affects both ordinary (access and error) and rotating log files.

Log_File_Cleanup_Interval 3600
# Integer
# Default: 3600
# Used by AWS: No
#
# The amount of seconds between each activation of the Log_File_Monitor cleanup
# task.
# Since the Log_File_Monitor task performs a very simple search for log files in
# the Log_File_Directory, this might be a costly operation if the directory 
# containing the log files are holding a lot of files.
#
# The Log_File_Monitor simply search the Log_File_Directory for this:
#
#   Log_Filename_Prefix*
#   Error_Log_Filename_Prefix*
#
# It then compiles a list of files, sorted with newest first, from which files are
# deleted until the length of the list equals Amount_Of_Log_Files_To_Keep.
#
# As long as you keep the Yolk log files in logs/, then it's probably not an issue,
# but if you move them to a possibly busy directory like /var/log/ then an hourly
# check might be a bit much.
#
# On the other hand, if the server is very busy, and you don't want to drown in 
# log files, then lowering this value might do the trick.

Log_File_Directory logs/
# String. 
# Default: logs/
# Used by AWS: Yes
#
# Path to where the log files are written. Must be read/writable by the server.

Log_Filename_Prefix yolk_access
# String
# Default: yolk_access
# Used by AWS: Yes
#
# What to prefix to the accesslog filename. 
# If commented then <program name>_error is used.
#
# NOTE:
#
#   Must _not_ be set to the same value as Error_Log_Filename_Prefix
#
# The log file cleanup routine search for access log files named:
#
#       Log_Filename_Prefix*
#
# So if Log_Filename_Prefix is set to yolk_access, then the cleanup routine
# will search in the Log_File_Directory for files named:
#
#       yolk_access*
#
# This in turn means that you should take care _not_ to set this prefix to
# to something that would collide with Error_Log_Filename_Prefix, or any other
# log files for that matter, especially if you set the Log_File_Directory to a  
# directory where there's a lot of other log files.
#
# In other words: Make absolute sure that Log_Filename_Prefix is unique to this
# application.

Log_Size_Limit 10_000_000
# Integer
# Default: 10_000_000
# Used by AWS: Yes
# Split AWS access and error log files when they reach this size in bytes.
#
# If this is set to 0, then AWS access and error log files are never split based
# on size.
#
# Yolk applications clean up log files automatically. Amount_Of_Log_Files_To_Keep
# access and error log files are kept, the rest are deleted.
#
# Make sure that Log_Size_Limit is set according to the amount of space you wish
# to use for log files. If it's set at 1_000_000 then you get
#
#   Amount_Of_Log_Files_To_Keep x 1MB
#
# Which given enough time will result in 60 files total (access and error). 
# Granted, if your app is working as intended, your error files should all be empty, 
# but they will be there.
# This parameter does not affect the size of the rotating log files. Look for the
# Rotating_Log_Size_Limit parameter to control the size of these files.

Log_Split_Mode Daily
# Enumeration (None, Each_Run, Daily, Monthly)
# Default: Daily
# Used by AWS: Yes
#
# Specifies how to split the access logs. Each_Run means that a new log file
# is created each time the application is started and then never split. 
# Daily and Monthly will split a new log file each day or month. 
# None means that the log file is never split.
#
# All of these are overruled if the Log_Size_Limit is reached. The the log file
# is split and a date and time is appended to the filename.

Max_Connection 5
# Positive
# Default: 5
# Used by AWS: Yes
#
# The maximum number of simultaneous connections to the server. This is effectively
# the amount of threads in the server.
# 
# One thread is used for each connection, so a value of 5 means 5 concurrent users.
#
# If the Connect_To_DB package is used, then this setting also specify the amount
# of DB_Conn tasks started.

Max_Slot_Count 3
# Positive.
# Default: 3
# Used by AWS: No
# The amount of slots to cycle. Amount of log files generated will equal this 
# value.
# There are three default rotating log files:
#
#   ERROR
#   GNATCOLL_SQL
#   INFO
#
# Each of these will have Max_Slot_Count files to which log data is written.

MIME_Types configuration/aws.mime
# String
# Default: configuration/aws.mime
# Used by AWS: yes
#
# The MIME type file. MIME types defined in this file are added to AWS when the
# server is started.

Reuse_Address True
# Boolean
# Default: False
# Used by AWS: Yes
#
# Set the socket reuse address policy. If set to True the server will be able
# to bind to a socket that has just been released without the need for 
# waiting. 
#
# NOTE:
#   Enabling this feature is _not_ secure and should probably only be used 
#   for debugging purposes.

Rotating_Log_Size_Limit 1_000_000
# Integer
# Default: 1_000_000
# Used by AWS: No
#
# When a rotating log file reach this size in bytes, it is "rotated" to the next
# slot (see Max_Slot_Count), so if Rotating_Log_Size_Limit is 1_000_000 and 
# Max_Slot_Count is 3, then the maximum amount of space used by rotating log files
# are:
#
#   3 x 1_000_000 bytes
#
# Note that there are three default rotating log files:
#
#   ERROR
#   GNATCOLL_SQL
#   INFO
#
# These are all rotated based on the Rotating_Log_Size_Limit.

##################################
#      HTTPS - Secure Server     #
##################################

Certificate certificates/aws.pem
# String
# Default: certificates/aws.pem
# Used by AWS: Yes
#
# Set the certificate file to be used with the secure servers. 
# A single certificate or a certificate chain is supported. The certificates
# must be in PEM format and the chain must be sorted starting with the 
# subject's certificate, followed by intermediate CA certificates if 
# applicable and ending at the highest level (root) CA certificate. If the 
# file contains only a singlecertificate, it can be followed by a private key.
# In this case the Key parameter (see below) must empty.

Security False
# Boolean
# Default: False
# Used by AWS: Yes
#
# Whether or not to accept HTTPS connections. If set to True, the server will
# accept HTTPS connections. If false, only regular HTTP connections are
# accepted.
# If set to True, AWS must've been compiled with SSL enabled, and the 
# Certificate option must point to a valid certificate. A test certificate
# can be made like this:
#
#   $ openssl genrsa -rand <filename> -out ca-key.pem
#   $ $ openssl req -new -x509 -days 730 -key ca-key.pem -out ca-cert.pem
#   $ cat ca-key.pem ca-cert.pem > aws.pem
#
# The file aws.pem is now usable as a test certificate.

Security_Mode SSLv23
# String
# Default: SSLv23
# Used by AWS: Yes
#
# The security mode to use for the secure connections. Available options are:
#
#   SSLv2,  SSLv23, SSLv3
#
# This parameter is obviously ignored if Security is False and/or AWS has been 
# compiled without SSL support.

Server_Name Yolk
# String
# Default: Yolk
# Used by AWS: Yes
#
# The name of the server.
#
# The Server_Name is prefixed to the rotating log files.

Server_Port 4242
# Positive
# Default: 4242
# Used by AWS: Yes
#
# Port the server is listening on. Remember that only root can listen on
# ports < 1024, so this value should be higher than 1024, or else you'll 
# have to run the server as root, which is _not_ recommended.

##################################
#           Sessions             #
##################################

Session False
# Boolean
# Default: False
# Used by AWS: Yes
#
# Whether or not the server is using sessions.

Session_Lifetime 1200
# Positive
# Default: 1200
# Used by AWS: Yes
#
# Number of seconds to keep session information. After this period a session
# is obsoleted and will be removed at next cleanup.
#
# NOTE:
#   Sessions are kept in memory, so a very long Session_Lifetime on a busy
#   server could possibly mean a lot of memory spend keeping track of all
#   those sessions. Use with caution.

Session_Name Yolk
# String
# Default: Yolk
# Used by AWS: Yes
#
# The name given to the session cookie.

##########################
#  Static Content Paths  #
##########################

# The static content is content that does not change, such as images and flat
# XML/HTML files.
#
# NOTE:
#     Do _not_ add the final forward slash.

System_Templates_Path templates/system
# String.
# Default: templates/system
# Used by AWS: No
# Path to the system template files, such as 404.tmpl and similar.

CSS_Path    static_content/css
# String.
# Default: static_content/css
# Used by AWS: No
# Path to the directory where the CSS files are located.

GIF_Path    static_content/gif
# String.
# Default: static_content/gif
# Used by AWS: No
# Path to the directory where the GIF files are located.

HTML_Path   static_content/html
# String.
# Default: static_content/html
# Used by AWS: No
# Path to the directory where the HTML files are located.

ICO_Path    static_content/ico
# String.
# Default: static_content/ico
# Used by AWS: No
# Path to the directory where the ICO files are located.

JPG_Path    static_content/jpg
# String.
# Default: static_content/jpg
# Used by AWS: No
# Path to the directory where the JPG files are located.

JS_Path     static_content/js
# String.
# Default: static_content/js
# Used by AWS: No
# Path to the directory where the JS files are located.

PNG_Path    static_content/png
# String.
# Default: static_content/png
# Used by AWS: No
# Path to the directory where the PNG files are located.

XML_Path    static_content/xml
# String.
# Default: static_content/xml
# Used by AWS: No
# Path to the directory where the XML files are located.

XSL_Path    static_content/xsl
# String.
# Default: static_content/xsl
# Used by AWS: No
# Path to the directory where the XSL files are located.

##########################
#  Path To Session File  #
##########################

Session_Data_File session/session.data
# String.
# Default: session/session.data
# Used by AWS: No
# Path to the file where Session data is saved when the server is closed down.
# This file is read when the server is started, and active Sessions are then
# loaded from here.

#######################
#  Resource handlers  #
#######################

# These Key/Value pairs are literal names and regular expressions used to
# define which dispatcher is used for a given resource.
#
# NOTE:
#   Remember that the content is served on a "first hit" basis, meaning that
#   the first handler to return true wins.
#
# All dispatchers are set in the Handlers.Initialize procedure.

Handler_CSS .*\.css
# String.
# Default: .*\.css
# Used by AWS: No
# The regular expression used to decide if a requested resource is a CSS file.

Handler_GIF .*\.gif
# String.
# Default: .*\.gif
# Used by AWS: No
# The regular expression used to decide if a requested resource is a GIF file.

Handler_HTML .*\.html
# String.
# Default: .*\.html
# Used by AWS: No
# The regular expression used to decide if a requested resource is a HTML file.

Handler_ICO .*\.ico
# String.
# Default: .*\.ico
# Used by AWS: No
# The regular expression used to decide if a requested resource is a ICO file.

Handler_JPG .*\.jpg
# String.
# Default: .*\.jpg
# Used by AWS: No
# The regular expression used to decide if a requested resource is a JPG file.

Handler_JS .*\.js
# String.
# Default: .*\.js
# Used by AWS: No
# The regular expression used to decide if a requested resource is a JS file.

Handler_PNG .*\.png
# String.
# Default: .*\.png
# Used by AWS: No
# The regular expression used to decide if a requested resource is a PNG file.

Handler_XML .*\.xml
# String.
# Default: .*\.xml
# Used by AWS: No
# The regular expression used to decide if a requested resource is a XML file.

Handler_XSL .*\.xsl
# String.
# Default: .*\.xsl
# Used by AWS: No
# The regular expression used to decide if a requested resource is a XSL file.

Handler_Unknown [^status].*
# String.
# Default: [^status].*
# Used by AWS: No
# The regular expression used to decide if a requested resource is unknown.
# This handler is only called of none of the other handlers match the resource.

