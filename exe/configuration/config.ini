# All keys used in this file _must_ be defined in the Configuration.Types
# type in core/configuration.ads.
#
# Setting an empty key will overwrite the corresponding default value with
# a Null_Unbounded_String. 
# Accessing a key with no value returns an empty string if the target is
# String or Unbounded_String. If the target is Boolean, Float or Integer
# then the Empty_Key exception is raised.
# If a valid key is commented (or missing entirely), it is ignored, and the 
# default value is used.

##################
#  Rotating Log  #
##################
# The Rotating Log settings control when and how to rotate the logs defined
# in the GNATCOLL_Traces_Ini_File and in the Trace_Handles type found in the
# file core/rotating_log.ads.
#
# Three rotating log tracks are defined per default:
#
#   Error
#   Info
#   GNATCOLL_SQL
#
# These log tracks have nothing to do with the general logging from the
# webserver component. Instead these are log tracks you can write to using 
# the Rotating_Log.Track procedure.
# The GNATCOLL.SQL track is somewhat special, as the output from this is
# generated by the GNATCOLL.SQL package. The amount of SQL related log data
# is controlled in the GNATCOLL_Traces_Ini_File. See this file for examples
# on usage.
#
# Note that _a lot_ of SQL log data is generated on even moderately busy 
# websites. The GNATCOLL.SQL track should probably only be activated for
# debugging purposes.
#
# Adding a new log track is as easy as adding a new component to the 
# Trace_Handles type found in core/rotating_log.ads:
#
#   type Trace_Handles is (Error, Info, GNATCOLL_SQL, My_New_Log_Track);
#
# You can then start writing to this track using the Track procedure:
#
#   Track (Handle => My_New_Log_Track, Log_String => "FooBar");
#
# NOTE:
#     Everytime the server is started, all rotating log files named 
#     [Trace_Handles]-1.log are truncated. The log data in these files are 
#     _not_ preserved between restarts.

GNATCOLL_Traces_Ini_File configuration/GNATCOLL.SQL.Logs.ini
# String.
# Default: configuration/GNATCOLL.SQL.Tracks.ini
# The path to the GNATCOLL.SQL traces ini file. See this file for information
# on how to disable the various SQL related log information.

Immediate_Flush False
# Boolean. 
# Default: False. 
# If True, then we flush the IO buffer on every call to Track. If False,
# the IO buffer is flushed according to the Ada.Text_IO implementation.
# Setting it to true is incurs a performance penalty, but is necessary
# if you want log output to be written immediately.

Log_File_Path logs/
# String. 
# Default: logs/
# Path to where the rotating log files are written. Must be read/writable
# by the server.

Max_Logged_Characters 100_000
# Positive
# Default: 100_000
# This number define when to cycle the log file. If the amount of characters 
# logged is larger than this value, then the log file is cycled to the next 
# slot.

Max_Slot_Count 3
# Positive.
# Default: 3
# The amount of slots to cycle. Amount of log files generated will equal
# this value.

##########################
#  Static Content Paths  #
##########################

# The static content is content that does not change, such as images and flat
# XML/HTML files.
#
# NOTE:
#     Do _not_ add the final forward slash.

System_Templates_Path templates/system
# String.
# Default: templates/system
# Path to the system template files, such as 404.tmpl and similar.

CSS_Path    static_content/css
# String.
# Default: static_content/css
# Path to the directory where the CSS files are located.

GIF_Path    static_content/gif
# String.
# Default: static_content/gif
# Path to the directory where the GIF files are located.

HTML_Path   static_content/html
# String.
# Default: static_content/html
# Path to the directory where the HTML files are located.

ICO_Path    static_content/ico
# String.
# Default: static_content/ico
# Path to the directory where the ICO files are located.

JPG_Path    static_content/jpg
# String.
# Default: static_content/jpg
# Path to the directory where the JPG files are located.

JS_Path     static_content/js
# String.
# Default: static_content/js
# Path to the directory where the JS files are located.

PNG_Path    static_content/png
# String.
# Default: static_content/png
# Path to the directory where the PNG files are located.

XML_Path    static_content/xml
# String.
# Default: static_content/xml
# Path to the directory where the XML files are located.

XSL_Path    static_content/xsl
# String.
# Default: static_content/xsl
# Path to the directory where the XSL files are located.

##########################
#  Path To Session File  #
##########################

Session_Data_File session/session.data
# String.
# Default: session/session.data
# Path to the file where Session data is saved when the server is closed down.
# This file is read when the server is started, and active Sessions are then
# loaded from here.

#######################
#  Resource handlers  #
#######################

# These Key/Value pairs are literal names and regular expressions used to
# define which dispatcher is used for a given resource.
#
# NOTE:
#   Remember that the content is served on a "first hit" basis, meaning that
#   the first handler to return true wins.
#
# All dispatchers are set in the Handlers.Initialize procedure.

Handler_CSS .*\.css
# String.
# Default: .*\.css
# The regular expression used to decide if a requested resource is a CSS file.

Handler_GIF .*\.gif
# String.
# Default: .*\.gif
# The regular expression used to decide if a requested resource is a GIF file.

Handler_HTML .*\.html
# String.
# Default: .*\.html
# The regular expression used to decide if a requested resource is a HTML file.

Handler_ICO .*\.ico
# String.
# Default: .*\.ico
# The regular expression used to decide if a requested resource is a ICO file.

Handler_JPG .*\.jpg
# String.
# Default: .*\.jpg
# The regular expression used to decide if a requested resource is a JPG file.

Handler_JS .*\.js
# String.
# Default: .*\.js
# The regular expression used to decide if a requested resource is a JS file.

Handler_PNG .*\.png
# String.
# Default: .*\.png
# The regular expression used to decide if a requested resource is a PNG file.

Handler_XML .*\.xml
# String.
# Default: .*\.xml
# The regular expression used to decide if a requested resource is a XML file.

Handler_XSL .*\.xsl
# String.
# Default: .*\.xsl
# The regular expression used to decide if a requested resource is a XSL file.

Handler_Unknown [^status].*
# String.
# Default: [^status].*
# The regular expression used to decide if a requested resource is unknown.
# This handler is only called of none of the other handlers match the resource.

