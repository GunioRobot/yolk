With the Yolk.Connect_To_DB.PostgreSQL package we can connect to PostgreSQL
databases, simply by doing this:

    with Yolk.Connect_To_DB.PostgreSQL;

    package My_DB is new Yolk.Connect_To_DB.PostgreSQL
      (DB_Credentials            => Yolk.Connect_To_DB.Set_Credentials
         (Host              => "server",
          Database          => "databasename",
          User              => "username",
          Password          => "secret"),
       Task_To_DB_Mapping_Method => Yolk.Connect_To_DB.AWS_Tasks_To_DB);

And then to get a GNATCOLL.SQL.Exec.Database_Connection we simply do

    with GNATCOLL.SQL.Exec;

    declare:
       use GNATCOLL.SQL.Exec;
       DB_Conn : Database_Connection := My_DB.Connection;
    begin
       --  Stuff
    end;

The Task_To_DB_Mapping_Method is described in yolk-connect_to_db-postgresql.ads.
Understanding how this works is important, so read it carefully. A rule of thumb
is that if you only need to connect to one database, then use

    Task_To_DB_Mapping_Method => Yolk.Connect_To_DB.AWS_Tasks_To_DB

If you need to connect to several databases, use AWS_Tasks_To_DB for the first and
DB_Conn_Tasks_To_DB for the subsequent, like this

    with Yolk.Connect_To_DB.PostgreSQL;

    package My_DB_One is new Yolk.Connect_To_DB.PostgreSQL
      (DB_Credentials            => Yolk.Connect_To_DB.Set_Credentials
         (Host              => "server",
          Database          => "database_one",
          User              => "username",
          Password          => "secret"),
       Task_To_DB_Mapping_Method => Yolk.Connect_To_DB.AWS_Tasks_To_DB);

    package My_DB_Two is new Yolk.Connect_To_DB.PostgreSQL
      (DB_Credentials            => Yolk.Connect_To_DB.Set_Credentials
         (Host              => "server",
          Database          => "database_two",
          User              => "username",
          Password          => "secret"),
       Task_To_DB_Mapping_Method => Yolk.Connect_To_DB.DB_Conn_Tasks_To_DB);

If you instantiate the generic more than once with AWS_Tasks_To_DB an exception
is raised.

You can read more about the GNATcoll database interface here:

https://www.adacore.com/wp-content/files/auto_update/gnatcoll-docs/gnatcoll.html
