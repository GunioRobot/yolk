# All keys used in this file _must_ be defined in the Yolk.Configuration.Keys
# type found in the Yolk.Configuration package. If a key is set in this file
# and it does not exist in Yolk.Configuration.Keys, then an exception is raised
# when the Yolk server is started.
#
# Accessing a key with no value returns an empty string if the target is
# String or Unbounded_String.
# If a valid key is commented (or missing entirely), it is ignored, and the
# default value is used.
# Default values are defined in the Yolk.Configuration.Default_Values array.
#
# Keys marked with:
#
#   AWS configuration option: Yes
#
# are configuration options that are defined in the AWS package and are used
# directly by AWS. Keys marked "No" are used by Yolk. These might be used to
# control some aspect of AWS, but they are not used directly by AWS.

##################################
#       Yolk System User         #
##################################

Yolk_User thomas
# String
# Default: thomas
# AWS configuration option: No
#
# The system user that owns the Yolk application. When a Yolk application is
# started, this is the user it will run as.
# If the username given does not exist, or the system can't setuid to it, the
# application wont start and a log message is written to syslog, if the Error
# log stream is activated.

#################################
#           Logging             #
#################################

# There are two kinds of log data in a Yolk application:
#
#   AWS access and error log data
#   Application specific log data
#
# Both of these are logged to syslog, according to the facilities and levels
# set in this configuration file.
#
# Valid facilities are:
#
#      Kernel
#      User
#      Mail
#      Daemon
#      Auth
#      Sys_Log
#      Printer
#      News
#      UUCP
#      Cron
#      Auth_Priv
#      FTP
#      NTP
#      Security
#      Console
#      Local[0-7]
#
# Valid levels are:
#
#      Emergency
#      Alert
#      Critical
#      Error
#      Warning
#      Notice
#      Info
#      Debug

AWS_Access_Log_Activate True
# Boolean
# Default: True
# AWS configuration option: No
#
# Whether or not Yolk start the AWS component with access logging turned on.
#
# All HTTP(S) traffic, successful and failed, is written to this log stream.
#
# Often a Yolk application will be running behind some sort of proxy, and this
# proxy might log all requests. In such a case, it is a waste of resources to
# also have AWS log all access requests. 

AWS_Access_Syslog_Facility_Level user:info
# String
# Default: user:info
# AWS configuration option: No
#
# Set the syslog facility and level for the AWS access log data. Use the 
# format:
#   facility:level

AWS_Error_Log_Activate True
# Boolean
# Default: True
# AWS configuration option: No
#
# Whether or not Yolk start the AWS component with error logging turned on.
# Errors logged to this stream relate to problems in the AWS component, such
# as tasks dying or other AWS related problems. Unless you have very specific
# regquirements, it is probably best to have this stream activated.

AWS_Error_Syslog_Facility_Level user:info
# String
# Default: user:info
# User by AWS: No
#
# Set the syslog facility and level for the AWS error log data. Use the format:
#   facility:level

Error_Log_Activate True
# Boolean
# Default: True
# AWS configuration option: No
# 
# When this is True, the Error log trace data is sent to syslog. This is not
# the same log data as the data from the AWS_Error_Log_Activate strean, instead
# this is a log stream you can use for your application level errors. 

Error_Syslog_Facility_Level user:info
# String
# Default: user:info
# AWS configuration option: No
#
# Set the syslog facility and level for the application error log stream. Use 
# the format:
#   facility:level

Info_Log_Activate True
# Boolean
# Default: True
# AWS configuration option: No
# 
# When this is True, the Info log trace data is sent to syslog. This is an
# application level log stream, similar to Error_Log_Activate, except log
# messages are prepended with INFO instead of ERROR.

Info_Syslog_Facility_Level user:info
# String
# Default: user:info
# AWS configuration option: No
#
# Set the syslog facility and level for the application info log stream. Use the
# format:
#   facility:level

SQL_Log_Activate True
# Boolean
# Default: True
# AWS configuration option: No
#
# When this is True, all non SELECT SQL queries generated by GNATcoll are sent
# to syslog. This is usually a fairly busy stream, so it should probably only be
# set to True during development/debugging.

SQL_Syslog_Facility_Level user:info
# String
# Default: user:info
# AWS configuration option: No
#
# Set the syslog facility and level for the application SQL log stream. Use the
# format:
#   facility:level

SQL_Cache_Log_Activate True
# Boolean
# Default: True
# AWS configuration option: No
#
# When this is True, all SQL queries generated by GNATcoll that involve the cache
# are sent to syslog. Depending on your application, this can be a very busy 
# stream, so it should probably only be set to True during development/debugging.

SQL_Cache_Syslog_Facility_Level user:info
# String
# Default: user:info
# AWS configuration option: No
#
# Set the syslog facility and level for the application SQL Cache log stream. 
# Use the format:
#   facility:level

SQL_Error_Log_Activate True
# Boolean
# Default: True
# AWS configuration option: No
#
# When True, all database related errors (failed transactions, failed connections)
# are sent to syslog. This should probably always be True.

SQL_Error_Syslog_Facility_Level user:info
# String
# Default: user:info
# AWS configuration option: No
#
# Set the syslog facility and level for the application SQL Error log stream.
# Use the format:
#   facility:level

SQL_Select_Log_Activate True
# Boolean
# Default: True
# AWS configuration option: No
#
# When True, all GNATcoll SQL SELECT queries are sent to syslog.
# This is usually a very busy stream, so it should probably only be set to True
# during development/debugging.

SQL_Select_Syslog_Facility_Level user:info
# String
# Default: user:info
# AWS configuration option: No
#
# Set the syslog facility and level for the application SQL SELECT log stream.
# Use the format:
#   facility:level

Log_Extended_Fields
# String
# Default: [no value]
# AWS configuration option: Yes
#
# Comma separated list of the extended log field names. If this parameter
# is empty, the HTTP access log will have a fixed Apache compatible format:
#
#    127.0.0.1 - - [25/Apr/1998:15:37:29 +0200] "GET / HTTP/1.0" 200 1363
#
# If the extended fields list is not empty, the log format would have user 
# defined fields set:
#
#    #Version: 1.0
#    #Date: 2006-01-09 00:00:01
#    #Fields: date time cs-method cs-uri cs-version sc-status sc-bytes
#    2006-01-09 00:34:23 GET /foo/bar.html HTTP/1.1 200 30
#
# Fields in the list could be:
#
#  date         Date at which transaction completed
#  time         Time at which transaction completed
#  c-ip         Client side connected IP address
#  c-port       Client side connected port
#  s-ip         Server side connected IP address
#  s-port       Server side connected port
#  cs-method    HTTP request method
#  cs-username  Client authentication username
#  cs-version   Client supported HTTP version
#  cs-uri       Request URI
#  cs-uri-stem  Stem portion alone of URI (omitting query)
#  cs-uri-query Query portion alone of URI
#  sc-status    Responce status code
#  sc-bytes     Length of response message body
#  cs(<header>) Any header field name sent from client to server
#  sc(<header>) Any header field name sent from server to client
#  x-<appfield> Any application defined field name
#
# See the AWS manual for more information on how to use extended fields.
# This configuration option only applies to the AWS access log.

##################################
#           Sessions             #
##################################

Session True
# Boolean
# Default: True
# AWS configuration option: Yes
#
# Whether or not the server is using sessions.

Session_Cleanup_Interval 300.0
# Duration
# Default: 300.0
# AWS configuration option: Yes
#
# Number of seconds between each run of the session cleanup task. This task
# will remove all session data that have been obsoleted.

Session_Data_File session/session.data
# String.
# Default: session/session.data
# AWS configuration option: No
#
# Path to the file where session data is saved when the server is closed down.
# This file is read when the server is started, and active sessions are then
# loaded from here.
#
# NOTE:
#   Sessions are kept in memory. This file is only used to save sessions between
#   application restarts.

Session_Lifetime 1200.0
# Duration
# Default: 1200.0
# AWS configuration option: Yes
#
# Number of seconds to keep session information. After this period a session
# is obsoleted and will be removed at next cleanup. Note that simply reading
# a session value update the timestamp of the session, so a session is only
# considered stale if it has not been read/touched for Session_Lifetime.
#
# NOTE:
#   Sessions are kept in memory, so a very long Session_Lifetime on a busy
#   server could possibly mean a lot of memory spend keeping track of all
#   those sessions. Use with caution.

Session_Name Yolk
# String
# Default: Yolk
# AWS configuration option: Yes
#
# The name given to the session cookie.

##################################
#         Status Webpage         #
##################################

Admin_Password 0ac9c9d0c0b1ee058b65ae70c9aeb3a7
# String
# Default: 0ac9c9d0c0b1ee058b65ae70c9aeb3a7 (changemenow)
# AWS configuration option: Yes
#
# This value is generated by the AWS program aws_password:
#
#     $ aws_password admin <password>
#
# Where <password> is replaced by the password you want to use to gain access
# to the Status_Page.
#
# You should _always_ change Admin_Password to something more secure.

Admin_URI /status
# String
# Default: /status
# AWS configuration option: Yes
#
# This is the URI to call the administrative page.

Status_Page templates/system/aws_status.thtml
# String
# Default: templates/system/aws_status.thtml
# AWS configuration option: Yes
#
# Template used for the AWS status page.

##################################
#         System Templates       #
##################################

System_Templates_Path templates/system
# String.
# Default: templates/system
# AWS configuration option: No
#
# Path to the system template files, such as 404.tmpl, aws_directory.tmpl and
# similar.
#
# NOTE:
#     Do _not_ add the final forward slash.

##################################
#    Core Resource handlers      #
##################################

# These Key/Value pairs define which dispatcher is used for a given resource.
# All core resource handlers are specified in the Handlers package.

Handler_CSS .*\.css$
# String.
# Default: .*\.css$
# AWS configuration option: No
#
# The regular expression used to decide if a requested resource is a CSS file.

Handler_GIF .*\.gif$
# String.
# Default: .*\.gif$
# AWS configuration option: No
#
# The regular expression used to decide if a requested resource is a GIF file.

Handler_HTML .*\.html$
# String.
# Default: .*\.html$
# AWS configuration option: No
#
# The regular expression used to decide if a requested resource is an HTML file.

Handler_ICO .*\.ico$
# String.
# Default: .*\.ico$
# AWS configuration option: No
#
# The regular expression used to decide if a requested resource is an ICO file.

Handler_JPG .*\.jpg$
# String.
# Default: .*\.jpg$
# AWS configuration option: No
#
# The regular expression used to decide if a requested resource is a JPG file.

Handler_JS .*\.js$
# String.
# Default: .*\.js$
# AWS configuration option: No
#
# The regular expression used to decide if a requested resource is a JS file.

Handler_PNG .*\.png$
# String.
# Default: .*\.png$
# AWS configuration option: No
#
# The regular expression used to decide if a requested resource is a PNG file.

Handler_SVG .*\.svg$
# String.
# Default: \.svg$
# AWS configuration option: No
#
# The regular expression used to decide if a requested resource is an SVG file.

Handler_XML .*\.xml$
# String.
# Default: .*\.xml$
# AWS configuration option: No
#
# The regular expression used to decide if a requested resource is an XML file.

Handler_XSL .*\.xsl$
# String.
# Default: .*\.xsl$
# AWS configuration option: No
#
# The regular expression used to decide if a requested resource is an XSL file.

##################################
#             Server             #
##################################

Accept_Queue_Size 128
# Positive
# Default: 128
# AWS configuration option: Yes
#
# This is the size of the queue for the incoming requests. The higher this value
# is, the less "connection refused" will be reported to the client.

Case_Sensitive_Parameters True
# Boolean
# Default: True
# AWS configuration option: Yes
#
# If set to True the HTTP parameters are case sensitive.

Check_URL_Validity True
# Boolean
# Default: True
# AWS configuration option: Yes
#
# Server have to check URL for validity. For example it checks that an URL does not
# reference a resource above the application root directory.

Cleaner_Client_Data_Timeout 60.0
# Duration
# Default: 60.0 (1 minute)
# AWS configuration option: Yes
#
# Number of seconds to wait for a client message body before timing out. If 
# your clients are expected to send large amounts of data, then set this higher.
# If your clients are not supposed to send large amounts of data, then you can
# safely keep or lower this a bit.
# This is a timeout for the regular cleaner task.

Cleaner_Client_Header_Timeout 7.0
# Duration
# Default: 7.0
# AWS configuration option: Yes
#
# Number of seconds to wait for a client header before timing out. This value
# should probably stay at its default, unless you have very specific reasons for
# changing it.
# This is a timeout for the regular cleaner task.

Cleaner_Server_Response_Timeout 60.0
# Duration
# Default: 60.0 (1 minute)
# AWS configuration option: Yes
#
# Number of seconds to wait for a client to answer before timing out. This value
# should probably stay at its default, unless you have very specific reasons for
# changing it.
# This is a timeout for the regular cleaner task.

Cleaner_Wait_For_Client_Timeout 60.0
# Duration
# Default: 60.0
# AWS configuration option: Yes
#
# Number of seconds to wait for a client request, before timing out. This value
# should probably stay at its default, unless you have very specific reasons for
# changing it.
# This is a timeout for the regular cleaner task.

Compressed_Cache_Directory static_content/compressed_cache
# String
# Default: static_content/compressed_cache
# AWS configuration option: No
#
# The directory where the .gz compressed versions of static content are saved.
# This directory is cleared out on every reboot of the server, meaning that
# _everything_ in this directory is deleted, so be _very_ careful about the path
# you set for this parameter.
#
# This directory will be created if it doesn't exist when the server is started.
#
# This parameter only matters if Compress_Static_Content is True.
#
# NOTE:
#   Do not add the final forward slash.

Compressed_Max_Age 86400
# Natural
# Default: 86400
# AWS configuration option: No
#
# If a resource compressed by the Yolk.Static_Content.Compressable function is
# more than Compressed_Max_Age seconds old, then it is deleted and compressed
# anew.
# If this is set to 0, then the compressed files are never deleted due to age.

Compress_Minimum_File_Size 200
# Natural
# Default: 200
# AWS configuration option: No
#
# The minimum size, in bytes, a compressable file must have in order to be
# pre-compressed. Files below this threshold will _not_ be compressed.

Context_Lifetime 28800.0
# Duration
# Default: 28800.0
# AWS configuration option: Yes
#
# Lifetime of a web block context. After this period the context data is obsoleted
# and will be removed.

Force_Client_Data_Timeout 30.0
# Duration
# Default: 30.0
# AWS configuration option: Yes
#
# Number of seconds to wait for a client message body before timing out when
# resources are scarce.
# This value should probably stay at its default, unless you have very specific
# reasons for changing it.

Force_Client_Header_Timeout 2.0
# Duration
# Default: 2.0
# AWS configuration option: Yes
#
# Number of seconds to wait for a client header before timing out when
# resources are scarce.
# This value should probably stay at its default, unless you have very specific
# reasons for changing it.

Force_Server_Response_Timeout 30.0
# Duration
# Default: 30.0
# AWS configuration option: Yes
#
# Number of seconds to wait for a client to answer before timing out when
# resources are scarce.
# This value should probably stay at its default, unless you have very specific
# reasons for changing it.

Force_Wait_For_Client_Timeout 2.0
# Duration
# Default: 2.0
# AWS configuration option: Yes
#
# Number of seconds to wait for a client request before timing out when
# resources are scarce.
# This value should probably stay at its default, unless you have very specific
# reasons for changing it.

Free_Slots_Keep_Alive_Limit 1
# Natural
# Default: 1
# AWS configuration option: Yes
#
# This is the minimum number of remaining free slots to enable keep-alive HTTP
# connections. For very busy HTTP servers, the Free_Slots_Keep_Alive_Limit should be
# about 1-10% of the Max_Connection parameter, depending on the duration of the average
# server response. The longer the average time to send back a response is, the higher
# Free_Slots_Keep_Alive_Limit should be.

Hotplug_Port 8888
# Positive
# Default: 8888
# AWS configuration option: Yes
#
# This is the hotplug communication port needed to register and un-register a hotplug
# module.

Keep_Alive_Force_Limit 0
# Natural
# Default: 0
# AWS configuration option: Yes
#
# Defines the maximum number of keep-alive sockets that are processed with normal
# timeouts. If the amount of keep-alive sockets are more than Keep_Alive_Force_Limit,
# then the server will force shorter timeouts.
# If this parameter is commented or defined as 0, then the server will calculate the
# limit based on Max_Connection * 2.

Line_Stack_Size 16#150_000#
# Positive
# Default: 16#150_000#
# AWS configuration option: Yes
#
# The HTTP line stack size. The stack size must be adjusted for each application,
# depending on the use of the stack done by the callback procedures.

Max_Concurrent_Download 25
# Positive
# Default: 25
# AWS configuration option: Yes
#
# The maximum number of parallel downloads accepted by the download manager. See
# AWS.Services.Download for more information on this service.

Max_Connection 5
# Positive
# Default: 5
# AWS configuration option: Yes
#
# The maximum number of simultaneous connections to the server. This is effectively
# the amount of threads in the server.
#
# One thread is used for each connection, so a value of 5 basically means max 5 
# concurrent requests.

MIME_Types configuration/aws.mime
# String
# Default: configuration/aws.mime
# Used by AWS: yes
#
# The MIME type file. MIME types defined in this file are added to AWS when the
# server is started.

Receive_Timeout 30.0
# Duration
# Default: 30.0
# AWS configuration option: Yes
#
# Number of seconds before timing out when receiving data.

Reuse_Address False
# Boolean
# Default: False
# AWS configuration option: Yes
#
# Set the socket reuse address policy. If set to True the server will be able
# to bind to a socket that has just been released without the need for
# waiting.
#
# NOTE:
#   Enabling this feature is _not_ secure and should probably only be used
#   for debugging purposes.

Send_Timeout 40.0
# Duration
# Default: 40.0
# AWS configuration option: Yes
#
# Number of seconds before timing out when sending data.

Server_Host
# String
# Default: [no value]
# AWS configuration option: Yes
#
# The name of the host machine. This can be used if a computer has more than one
# IP address. It is possible to have two servers at the same port on the same machine,
# both being bound to different IP addresses.
# If you set the Server_Host, remember that you can no longer access the server
# using http://localhost:Server_Port.
#
# Unless you _know_ you need to set the host, this parameter should be left empty.

Server_Name Yolk
# String
# Default: Yolk
# AWS configuration option: Yes
#
# The name of the server.

Server_Port 4242
# Positive
# Default: 4242
# AWS configuration option: Yes
#
# Port the server is listening on. Remember that only root can listen on
# ports < 1024, so this value should be higher than 1024, or else you'll
# have to run the server as root, which is _not_ recommended.

Transient_Cleanup_Interval 180.0
# Duration
# Default: 180.0
# AWS configuration option: Yes
#
# Time in seconds between each removal of obsolete transient pages.

Transient_Lifetime 300.0
# Duration
# Default: 300.0
# AWS configuration option: Yes
#
# The amount of seconds to keep a transient page. After this time it is
# obsoleted and deleted by the next run of the cleaner task, the timer of
# which is set by the Transient_Cleanup_Interval parameter.

Upload_Directory uploads
# String
# Default: uploads
# AWS configuration option: Yes
#
# The directory where uploaded files are stored.
#
# NOTE:
#     Do _not_ add the final forward slash.

Upload_Size_Limit 16#500_000#
# Positive
# Default: 16#500_000#
# AWS configuration option: Yes
#
# The maximum accepted size for uploaded files in bytes.

WWW_Root static_content
# String.
# Default: static_content
# Used by AWS:  Yes and No. This value is not used by AWS internally, but it is
#               part of the default AWS configuration system.
#
# Path to the directory where the static content files are located.
#
# NOTE:
#     Do _not_ add the final forward slash.

##################################
#      HTTPS - Secure Server     #
##################################

# These settings are only relevant if you're running a HTTPS enabled server.

Certificate certificates/aws.pem
# String
# Default: certificates/aws.pem
# AWS configuration option: Yes
#
# Set the certificate file to be used with the secure servers.
# A single certificate or a certificate chain is supported. The certificates
# must be in PEM format and the chain must be sorted starting with the
# subject's certificate, followed by intermediate CA certificates if
# applicable and ending at the highest level (root) CA certificate. If the
# file contains only a singlecertificate, it can be followed by a private key.
# In this case the Key parameter (see below) must empty.

Exchange_Certificate False
# Boolean
# Default: False
# AWS configuration option: Yes
#
# If True then request the client to send its certificate to the server.

Key
# String
# Default: [no value]
# AWS configuration option: Yes
#
# Set the RSA key file to be used with a secure server.

Security False
# Boolean
# Default: False
# AWS configuration option: Yes
#
# Whether or not to accept HTTPS connections. If set to True, the server will
# accept HTTPS connections. If false, only regular HTTP connections are
# accepted.
# If set to True, AWS must've been compiled with SSL enabled, and the
# Certificate option must point to a valid certificate. A test certificate
# can be made like this:
#
#   $ openssl genrsa -rand <filename> -out ca-key.pem
#   $ $ openssl req -new -x509 -days 730 -key ca-key.pem -out ca-cert.pem
#   $ cat ca-key.pem ca-cert.pem > aws.pem
#
# The file aws.pem is now usable as a test certificate.

Security_Mode SSLv23
# String
# Default: SSLv23
# AWS configuration option: Yes
#
# The security mode to use for the secure connections. Available options are:
#
#   SSLv2,  SSLv23, SSLv3
#
# This parameter is obviously ignored if Security is False and/or AWS has been
# compiled without SSL support.
